{"ast":null,"code":"var _jsxFileName = \"/Users/asick/projects/task/resonanz/frontend/src/Components/PowerPlantList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport TableView from './TableView';\nimport Button from './Button';\nimport MapView from './MapView';\nconst URL_PATH = 'https://reactdemoapi.herokuapp.com/power-plants'; //const URL_PATH = 'http://localhost:8081/power-plants';\n\nexport default class PowerPlantList extends Component {\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n    this.state = {\n      data: [],\n      filter: \"\",\n      productionValue: \"\",\n      view: 'table'\n    };\n    this._loadData = this._loadData.bind(this);\n  }\n\n  componentWillMount() {\n    this._loadData(); // first time loading the data\n\n\n    setInterval(() => this._loadData(), 10000); // data will after 10 second\n  }\n\n  filterType(e) {\n    this.setState({\n      filter: e.target.value\n    });\n  }\n\n  filterProductionValue(e) {\n    this.setState({\n      productionValue: e.target.value\n    });\n  }\n\n  _loadData() {\n    const data = this.state.data;\n    axios.get(URL_PATH).then(response => {\n      console.log(response);\n      this.setState({\n        data: response.data\n      });\n    });\n  }\n\n  onClick() {\n    console.log(this.state.view);\n    this.setState({\n      view: 'map'\n    }, () => {});\n  }\n\n  render() {\n    // filer\n    let getData;\n\n    if (this.state.filter != '') {\n      getData = this.state.data.filter(dt => {\n        console.log(dt.type);\n        return dt.type === this.state.filter;\n      });\n    } else {\n      getData = this.state.data;\n    } //  productionValue sorting\n\n\n    if (this.state.productionValue) {\n      console.log(this.state.productionValue);\n\n      if (this.state.productionValue == 'desc') {\n        getData.sort((a, b) => b.production_value_kw - a.production_value_kw);\n      } else if (this.state.productionValue == 'asc') {\n        getData.sort((a, b) => a.production_value_kw - b.production_value_kw);\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Power Plants\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col m4 s4 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Filter\"), React.createElement(\"select\", {\n      onChange: this.filterType.bind(this),\n      value: this.state.filterType,\n      className: \"browser-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Select Type\"), React.createElement(\"option\", {\n      value: \"WIND_ONSHORE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"On Shore\"), React.createElement(\"option\", {\n      value: \"WIND_OFFSHORE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Off Shore\"), React.createElement(\"option\", {\n      value: \"HYDRO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Hydro\"), React.createElement(\"option\", {\n      value: \"BIOMASS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"BIOMASS\"))), React.createElement(\"div\", {\n      className: \"col m4 s4 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Production Value (MAx or Min)\"), React.createElement(\"select\", {\n      onChange: this.filterProductionValue.bind(this),\n      value: this.state.filterProductionValue,\n      className: \"browser-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Select Production Value\"), React.createElement(\"option\", {\n      value: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Production Value Max\"), React.createElement(\"option\", {\n      value: \"asc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Production Value Min\")))), React.createElement(TableView, {\n      data: getData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/asick/projects/task/resonanz/frontend/src/Components/PowerPlantList.js"],"names":["React","Component","axios","TableView","Button","MapView","URL_PATH","PowerPlantList","constructor","props","onClick","bind","state","data","filter","productionValue","view","_loadData","componentWillMount","setInterval","filterType","e","setState","target","value","filterProductionValue","get","then","response","console","log","render","getData","dt","type","sort","a","b","production_value_kw"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACC,MAAMC,QAAQ,GAAG,iDAAjB,C,CACD;;AAIA,eAAe,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AAElDO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,MAAM,EAAC,EAFI;AAGXC,MAAAA,eAAe,EAAC,EAHL;AAIXC,MAAAA,IAAI,EAAC;AAJM,KAAb;AAMA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeN,IAAf,CAAoB,IAApB,CAAjB;AAED;;AAEFO,EAAAA,kBAAkB,GAAE;AACjB,SAAKD,SAAL,GADiB,CACA;;;AACjBE,IAAAA,WAAW,CAAC,MAAK,KAAKF,SAAL,EAAN,EAAwB,KAAxB,CAAX,CAFiB,CAEyB;AAE5C;;AAEDG,EAAAA,UAAU,CAACC,CAAD,EAAG;AACV,SAAKC,QAAL,CAAc;AAACR,MAAAA,MAAM,EAAEO,CAAC,CAACE,MAAF,CAASC;AAAlB,KAAd;AACD;;AAEDC,EAAAA,qBAAqB,CAACJ,CAAD,EAAG;AACtB,SAAKC,QAAL,CAAc;AAACP,MAAAA,eAAe,EAAEM,CAAC,CAACE,MAAF,CAASC;AAA3B,KAAd;AACD;;AAEFP,EAAAA,SAAS,GAAG;AAAA,UACCJ,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAETX,IAAAA,KAAK,CAACwB,GAAN,CAAUpB,QAAV,EAAoBqB,IAApB,CAAyBC,QAAQ,IAAI;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACC,WAAKN,QAAL,CAAc;AACZT,QAAAA,IAAI,EAAEe,QAAQ,CAACf;AADH,OAAd;AAKD,KAPD;AAQD;;AAEDH,EAAAA,OAAO,GAAE;AACPmB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWI,IAAvB;AACA,SAAKM,QAAL,CAAc;AAACN,MAAAA,IAAI,EAAE;AAAP,KAAd,EAA6B,MAAM,CAElC,CAFD;AAID;;AAEHe,EAAAA,MAAM,GAAG;AACP;AACA,QAAIC,OAAJ;;AACA,QAAG,KAAKpB,KAAL,CAAWE,MAAX,IAAoB,EAAvB,EAA2B;AACzBkB,MAAAA,OAAO,GAAG,KAAKpB,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,CACTmB,EAAD,IAAO;AACLJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,EAAE,CAACC,IAAf;AACA,eAAOD,EAAE,CAACC,IAAH,KAAY,KAAKtB,KAAL,CAAWE,MAA9B;AACD,OAJS,CAAV;AAMD,KAPD,MAOO;AACJkB,MAAAA,OAAO,GAAI,KAAKpB,KAAL,CAAWC,IAAtB;AACF,KAZM,CAcP;;;AACA,QAAG,KAAKD,KAAL,CAAWG,eAAd,EAA8B;AAC5Bc,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWG,eAAvB;;AACA,UAAG,KAAKH,KAAL,CAAWG,eAAX,IAA8B,MAAjC,EAAwC;AACpCiB,QAAAA,OAAO,CAACG,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,mBAAF,GAAwBF,CAAC,CAACE,mBAAjD;AACH,OAFD,MAEO,IAAG,KAAK1B,KAAL,CAAWG,eAAX,IAA8B,KAAjC,EAAuC;AAC1CiB,QAAAA,OAAO,CAACG,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,mBAAF,GAAwBD,CAAC,CAACC,mBAAjD;AACH;AACJ;;AAGG,WAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAQ,MAAA,QAAQ,EAAE,KAAKlB,UAAL,CAAgBT,IAAhB,CAAqB,IAArB,CAAlB;AAA8C,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWQ,UAAhE;AAA4E,MAAA,SAAS,EAAC,iBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAQ,MAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI;AAAQ,MAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,EAII;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,CAFJ,CADN,EAWM;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADA,EAEI;AAAQ,MAAA,QAAQ,EAAE,KAAKK,qBAAL,CAA2Bd,IAA3B,CAAgC,IAAhC,CAAlB;AAAyD,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWa,qBAA3E;AAAkG,MAAA,SAAS,EAAC,iBAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,EAGI;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHJ,CAFJ,CAXN,CAFF,EAuBA,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEO,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBA,CAFF;AA4BH;;AAtGiD","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport TableView from './TableView';\nimport Button from './Button';\nimport MapView from './MapView';\n const URL_PATH = 'https://reactdemoapi.herokuapp.com/power-plants';\n//const URL_PATH = 'http://localhost:8081/power-plants';\n \n \n\nexport default class PowerPlantList extends Component {\n    \n    constructor(props){\n        super(props)\n        this.onClick = this.onClick.bind(this);\n        this.state = {\n          data: [],\n          filter:\"\",\n          productionValue:\"\",\n          view:'table'\n        }\n        this._loadData = this._loadData.bind(this);\n        \n      }\n\n     componentWillMount(){\n        this._loadData() // first time loading the data\n        setInterval(()=> this._loadData(), 10000) // data will after 10 second\n       \n     }\n\n     filterType(e){\n        this.setState({filter: e.target.value})\n      }\n     \n      filterProductionValue(e){\n        this.setState({productionValue: e.target.value})\n      }\n\n     _loadData() {\n        const {   data } = this.state;\n        axios.get(URL_PATH).then(response => {\n         console.log(response); \n          this.setState({\n            data: response.data,\n            \n          });\n          \n        });\n      }\n\n      onClick(){\n        console.log(this.state.view)\n        this.setState({view: 'map'}, () => { \n            \n        });\n                      \n      }\n\n    render() {\n      // filer\n      let getData;\n      if(this.state.filter !='') {\n        getData = this.state.data.filter(\n        (dt) =>{\n          console.log(dt.type)\n          return dt.type === this.state.filter;\n        }\n      );\n      } else {\n         getData =  this.state.data;\n      }\n\n      //  productionValue sorting\n      if(this.state.productionValue){\n        console.log(this.state.productionValue)\n        if(this.state.productionValue == 'desc'){\n            getData.sort((a, b) => b.production_value_kw - a.production_value_kw);\n        } else if(this.state.productionValue == 'asc'){\n            getData.sort((a, b) => a.production_value_kw - b.production_value_kw);    \n        }\n    } \n      \n       \n        return (\n            \n          <div className=\"container\"> \n            <h3>Power Plants</h3>\n            <div className=\"row\">\n                  <div className=\"col m4 s4 center-align\">\n                      <label>Filter</label>\n                      <select onChange={this.filterType.bind(this)} value={this.state.filterType} className=\"browser-default\">\n                          <option value=\"\">Select Type</option>\n                          <option value=\"WIND_ONSHORE\">On Shore</option>\n                          <option value=\"WIND_OFFSHORE\">Off Shore</option>\n                          <option value=\"HYDRO\">Hydro</option>\n                          <option value=\"BIOMASS\">BIOMASS</option>\n                      </select>\n                  </div>\n                  <div className=\"col m4 s4 center-align\">\n                  <label>Production Value (MAx or Min)</label>\n                      <select onChange={this.filterProductionValue.bind(this)} value={this.state.filterProductionValue} className=\"browser-default\">\n                          <option value=\"\">Select Production Value</option>\n                          <option value=\"desc\">Production Value Max</option>\n                          <option value=\"asc\">Production Value Min</option>\n                      </select>\n                   </div>\n              </div> \n          {/* <MapView data={getData}/>  */}\n          <TableView data={getData}  /> \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}