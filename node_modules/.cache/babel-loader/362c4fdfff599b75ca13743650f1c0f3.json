{"ast":null,"code":"var _jsxFileName = \"/Users/asick/projects/task/resonanz/frontend/src/Components/PowerPlantList.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport TableView from './TableView';\nimport MapView from './MapView';\nconst URL_PATH = 'https://reactdemoapi.herokuapp.com/power-plants'; //const URL_PATH = 'http://localhost:8081/power-plants';\n\nexport default class PowerPlantList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      filter: \"\",\n      totalPages: '',\n      nextPage: '',\n      view: 'table',\n      selectedRow: ''\n    };\n    this._loadData = this._loadData.bind(this); //const [filterByType, setFilterByType] = useState(\"\");\n  }\n\n  componentWillMount() {\n    setInterval(() => this._loadData(), 10000);\n  }\n\n  filterChamp(e) {\n    this.setState({\n      filter: e.target.value\n    });\n  }\n\n  _loadData() {\n    const data = this.state.data;\n    axios.get(URL_PATH).then(response => {\n      console.log(response);\n      this.setState({\n        data: response.data\n      });\n    });\n  }\n\n  render(data) {\n    const getData = this.state.data;\n\n    if (this.state.filter) {\n      if (this.state.filter == 'WIND_ONSHORE') {\n        this.state.data.filter(list => list.type.includes(this.state.filter));\n        console.log(filteredList);\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Power Plants\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col m4 s4 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Sort By\"), React.createElement(\"select\", {\n      onChange: this.filterChamp.bind(this),\n      value: this.state.filterChamp,\n      className: \"browser-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Select\"), React.createElement(\"option\", {\n      value: \"WIND_ONSHORE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"On Shore\"), React.createElement(\"option\", {\n      value: \"WIND_OFFSHORE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Off Shore\"), React.createElement(\"option\", {\n      value: \"HYDRO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Hydro\"), React.createElement(\"option\", {\n      value: \"BIOMASS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"BIOMASS\"))), React.createElement(\"div\", {\n      className: \"col m4 s4 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Map View\")), React.createElement(TableView, {\n      data: this.state.data,\n      filter: this.state.filter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/asick/projects/task/resonanz/frontend/src/Components/PowerPlantList.js"],"names":["React","Component","useEffect","useState","axios","TableView","MapView","URL_PATH","PowerPlantList","constructor","props","state","data","filter","totalPages","nextPage","view","selectedRow","_loadData","bind","componentWillMount","setInterval","filterChamp","e","setState","target","value","get","then","response","console","log","render","getData","list","type","includes","filteredList"],"mappings":"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","sourcesContent":["import React, { Component,useEffect,useState } from 'react'\nimport axios from 'axios';\nimport TableView from './TableView';\nimport MapView from './MapView';\n const URL_PATH = 'https://reactdemoapi.herokuapp.com/power-plants';\n//const URL_PATH = 'http://localhost:8081/power-plants';\n \n \n\nexport default class PowerPlantList extends Component {\n    \n    constructor(props){\n        super(props)\n        \n        this.state = {\n          data: [],\n          filter:\"\",\n          totalPages: '',\n          nextPage: '',\n          view:'table',\n          selectedRow:''\n        }\n        this._loadData = this._loadData.bind(this);\n        //const [filterByType, setFilterByType] = useState(\"\");\n      }\n\n      componentWillMount(){\n       \n        setInterval(()=> this._loadData(), 10000)\n       \n     }\n     filterChamp(e){\n        this.setState({filter: e.target.value})\n      }\n     _loadData() {\n        const {   data } = this.state;\n        axios.get(URL_PATH).then(response => {\n         console.log(response); \n          this.setState({\n            data: response.data,\n            \n          });\n          \n        });\n      }\n \n    \n      \n\n    render(data) {\n      const getData = this.state.data;\n      \n      if(this.state.filter){\n\n         if(this.state.filter == 'WIND_ONSHORE'){\n            \n          this.state.data.filter(list => list.type.includes(this.state.filter))\n          console.log(filteredList)\n         }  \n    } \n        \n       \n        return (\n            \n          <div className=\"container\"> \n            <h3>Power Plants</h3>\n            <div className=\"row\">\n                  <div className=\"col m4 s4 center-align\">\n                      <label>Sort By</label>\n                      <select onChange={this.filterChamp.bind(this)} value={this.state.filterChamp} className=\"browser-default\">\n                          <option value=\"\">Select</option>\n                          <option value=\"WIND_ONSHORE\">On Shore</option>\n                          <option value=\"WIND_OFFSHORE\">Off Shore</option>\n                          <option value=\"HYDRO\">Hydro</option>\n                          <option value=\"BIOMASS\">BIOMASS</option>\n                      </select>\n                  </div>\n                  <div className=\"col m4 s4 center-align\">\n                      Map View\n                   </div>\n              </div> \n          {/* <MapView data={getData}/>  */}\n          <TableView data={this.state.data} filter={this.state.filter} /> \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}