{"ast":null,"code":"import _classCallCheck from\"/Users/asick/projects/task/resonanz/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/asick/projects/task/resonanz/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/asick/projects/task/resonanz/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/asick/projects/task/resonanz/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/asick/projects/task/resonanz/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/asick/projects/task/resonanz/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import axios from'axios';import TableView from'./TableView';var URL_PATH='https://reactdemoapi.herokuapp.com/power-plants';//const URL_PATH = 'http://localhost:8081/power-plants';\n/**\n     * @public\n     * @class\n     * PowerPlantList to get json object and displayed it.\n     */var PowerPlantList=/*#__PURE__*/function(_Component){_inherits(PowerPlantList,_Component);/**\n     * @public\n     * @function\n     * It can be used to bind event handlers to the component and/or initializing the local state of the component\n     * data [] - initializing json values in array\n     * filter - filter type\n     * productionValue - sorting max or min values\n     */function PowerPlantList(props){var _this;_classCallCheck(this,PowerPlantList);_this=_possibleConstructorReturn(this,_getPrototypeOf(PowerPlantList).call(this,props));_this.state={data:[],filter:\"\",productionValue:\"\",currentPage:1,todosPerPage:10};_this._loadData=_this._loadData.bind(_assertThisInitialized(_this));_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));return _this;}/**\n     * @function\n     * this function for load data \n     * setInterval  -   data  will updating every 10 seconds\n     */_createClass(PowerPlantList,[{key:\"componentWillMount\",value:function componentWillMount(){var _this2=this;this._loadData();// first time loading the data\nsetInterval(function(){return _this2._loadData();},10000);// data will after 10 seconds\n}/**\n       * @function\n       * this function for set state value for filter type\n       * filter  -   set state value WIND_ONSHORE | WIND_OFFSHORE | HYDRO | BIOMASS\n       */},{key:\"filterType\",value:function filterType(e){this.setState({filter:e.target.value});}/**\n       * @function\n       * this function for sorting to set state Descending & Acending\n       * filter  -   set state value desc & asc\n       */},{key:\"filterProductionValue\",value:function filterProductionValue(e){this.setState({productionValue:e.target.value});}/**\n       * @function\n       * this function for fetching data from json url\n       * data  -   response data store to data variable\n       */},{key:\"_loadData\",value:function _loadData(){var _this3=this;var data=this.state.data;axios.get(URL_PATH).then(function(response){console.log(response);_this3.setState({data:response.data});});}},{key:\"handleClick\",value:function handleClick(event){this.setState({currentPage:Number(event.target.id)});}},{key:\"render\",value:function render(){var _this4=this;// filter type\n/**\n       * filer the data when we change the drop down \n       */var getData;if(this.state.filter!=''){getData=this.state.data.filter(function(dt){console.log(dt.type);return dt.type===_this4.state.filter;});}else{getData=this.state.data;}var _this$state=this.state,data=_this$state.data,currentPage=_this$state.currentPage,todosPerPage=_this$state.todosPerPage;var indexOfLastTodo=currentPage*todosPerPage;var indexOfFirstTodo=indexOfLastTodo-todosPerPage;var currentTodos=getData.slice(indexOfFirstTodo,indexOfLastTodo);var renderTodos=currentTodos.map(function(data,index){return data;});var pageNumbers=[];for(var i=1;i<=Math.ceil(data.length/todosPerPage);i++){pageNumbers.push(i);}var renderPageNumbers=pageNumbers.map(function(number){return React.createElement(\"li\",{key:number,id:number,onClick:_this4.handleClick},number);});//  productionValue sorting\nif(this.state.productionValue){console.log(this.state.productionValue);if(this.state.productionValue=='desc'){getData.sort(function(a,b){return b.production_value_kw-a.production_value_kw;});}else if(this.state.productionValue=='asc'){getData.sort(function(a,b){return a.production_value_kw-b.production_value_kw;});}}return React.createElement(\"div\",{className:\"container\"},React.createElement(\"h3\",null,\"Power Plants\"),React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col m4 s4 center-align\"},React.createElement(\"label\",null,\"Filter\"),React.createElement(\"select\",{onChange:this.filterType.bind(this),value:this.state.filterType,className:\"browser-default\"},React.createElement(\"option\",{value:\"\"},\"Select Type\"),React.createElement(\"option\",{value:\"WIND_ONSHORE\"},\"On Shore\"),React.createElement(\"option\",{value:\"WIND_OFFSHORE\"},\"Off Shore\"),React.createElement(\"option\",{value:\"HYDRO\"},\"Hydro\"),React.createElement(\"option\",{value:\"BIOMASS\"},\"BIOMASS\"))),React.createElement(\"div\",{className:\"col m4 s4 center-align\"},React.createElement(\"label\",null,\"Production Value (Max or Min)\"),React.createElement(\"select\",{onChange:this.filterProductionValue.bind(this),value:this.state.filterProductionValue,className:\"browser-default\"},React.createElement(\"option\",{value:\"\"},\"Select Production Value\"),React.createElement(\"option\",{value:\"desc\"},\"Production Value Max\"),React.createElement(\"option\",{value:\"asc\"},\"Production Value Min\")))),React.createElement(TableView,{data:renderTodos}),React.createElement(\"ul\",{id:\"page-numbers\"},renderPageNumbers));}}]);return PowerPlantList;}(Component);export{PowerPlantList as default};","map":{"version":3,"sources":["/Users/asick/projects/task/resonanz/frontend/src/Components/PowerPlantList.js"],"names":["React","Component","axios","TableView","URL_PATH","PowerPlantList","props","state","data","filter","productionValue","currentPage","todosPerPage","_loadData","bind","handleClick","setInterval","e","setState","target","value","get","then","response","console","log","event","Number","id","getData","dt","type","indexOfLastTodo","indexOfFirstTodo","currentTodos","slice","renderTodos","map","index","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","number","sort","a","b","production_value_kw","filterType","filterProductionValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport TableView from './TableView';\n const URL_PATH = 'https://reactdemoapi.herokuapp.com/power-plants';\n//const URL_PATH = 'http://localhost:8081/power-plants';\n \n \n    /**\n     * @public\n     * @class\n     * PowerPlantList to get json object and displayed it.\n     */\nexport default class PowerPlantList extends Component {\n    /**\n     * @public\n     * @function\n     * It can be used to bind event handlers to the component and/or initializing the local state of the component\n     * data [] - initializing json values in array\n     * filter - filter type\n     * productionValue - sorting max or min values\n     */\n    constructor(props){\n        super(props)\n        this.state = {\n          data: [],\n          filter:\"\",\n          productionValue:\"\",\n          currentPage: 1,\n          todosPerPage: 10\n        }\n        this._loadData = this._loadData.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        \n      }\n    /**\n     * @function\n     * this function for load data \n     * setInterval  -   data  will updating every 10 seconds\n     */\n\n     componentWillMount(){\n        this._loadData() // first time loading the data\n        setInterval(()=> this._loadData(), 10000) // data will after 10 seconds\n       \n     }\n     /**\n       * @function\n       * this function for set state value for filter type\n       * filter  -   set state value WIND_ONSHORE | WIND_OFFSHORE | HYDRO | BIOMASS\n       */\n\n     filterType(e){\n        this.setState({filter: e.target.value})\n      }\n\n      /**\n       * @function\n       * this function for sorting to set state Descending & Acending\n       * filter  -   set state value desc & asc\n       */\n     \n      filterProductionValue(e){\n        this.setState({productionValue: e.target.value})\n      }\n\n      /**\n       * @function\n       * this function for fetching data from json url\n       * data  -   response data store to data variable\n       */\n\n     _loadData() {\n        const {   data } = this.state;\n        axios.get(URL_PATH).then(response => {\n         console.log(response); \n          this.setState({\n            data: response.data,\n            \n          });\n          \n        });\n      }\n\n      handleClick(event) {\n        this.setState({\n          currentPage: Number(event.target.id)\n        });\n      }\n\n      \n\n      \n\n    render() {\n      // filter type\n       /**\n       * filer the data when we change the drop down \n       */\n      let getData;\n      if(this.state.filter !='') {\n        getData = this.state.data.filter(\n        (dt) =>{\n          console.log(dt.type)\n          return dt.type === this.state.filter;\n        }\n      );\n      } else {\n         getData =  this.state.data;\n      }\n\n      const {  data,currentPage, todosPerPage } = this.state;\n      const indexOfLastTodo = currentPage * todosPerPage;\n      const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\n      const currentTodos = getData.slice(indexOfFirstTodo, indexOfLastTodo);\n\n      const renderTodos = currentTodos.map((data, index) => {\n        \n        return data;\n      });\n\n      const pageNumbers = [];\n      for (let i = 1; i <= Math.ceil(data.length / todosPerPage); i++) {\n        pageNumbers.push(i);\n      }\n\n      const renderPageNumbers = pageNumbers.map(number => {\n        return (\n          <li\n            key={number}\n            id={number}\n            onClick={this.handleClick}\n          >\n            {number}\n          </li>\n        );\n      });\n\n    \n\n\n\n      //  productionValue sorting\n      if(this.state.productionValue){\n        console.log(this.state.productionValue)\n        if(this.state.productionValue == 'desc'){\n            getData.sort((a, b) => b.production_value_kw - a.production_value_kw);\n        } else if(this.state.productionValue == 'asc'){\n            getData.sort((a, b) => a.production_value_kw - b.production_value_kw);    \n        } \n    } \n      \n       \n        return (\n            \n          <div className=\"container\"> \n            <h3>Power Plants</h3>\n            <div className=\"row\">\n              {/* drop down for type */}\n                  <div className=\"col m4 s4 center-align\">\n                      <label>Filter</label>\n                      <select onChange={this.filterType.bind(this)} value={this.state.filterType} className=\"browser-default\">\n                          <option value=\"\">Select Type</option>\n                          <option value=\"WIND_ONSHORE\">On Shore</option>\n                          <option value=\"WIND_OFFSHORE\">Off Shore</option>\n                          <option value=\"HYDRO\">Hydro</option>\n                          <option value=\"BIOMASS\">BIOMASS</option>\n                      </select>\n                  </div>\n                  {/* drop down value Production Value */}\n                  <div className=\"col m4 s4 center-align\">\n                  <label>Production Value (Max or Min)</label>\n                      <select onChange={this.filterProductionValue.bind(this)} value={this.state.filterProductionValue} className=\"browser-default\">\n                          <option value=\"\">Select Production Value</option>\n                          <option value=\"desc\">Production Value Max</option>\n                          <option value=\"asc\">Production Value Min</option>\n                      </select>\n                   </div>\n              </div> \n           {/* Table */}\n          <TableView data={renderTodos}  /> \n           <ul id=\"page-numbers\">\n              {renderPageNumbers}\n           </ul>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}